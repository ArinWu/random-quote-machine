{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sushi\\\\Documents\\\\Dev\\\\JavascritTest\\\\randomquote\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n// import './App.css';\n\nimport 'typeface-roboto';\nimport QuoteMachine from './components/QuoteMachine';\nimport { random } from 'lodash';\nimport { Grid, withStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nconst style = {\n  container: {\n    type: 'dark',\n    alignItems: 'center',\n    display: 'flex',\n    height: '100vh'\n  },\n  Grid: {\n    height: '140'\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [{\n        \"quote\": \"get faild\",\n        \"author\": \"吴书琪\"\n      }],\n      selectedIndex: null\n    };\n    this.assignIndex = this.assignIndex.bind(this);\n    this.setSelectedIndex = this.setSelectedIndex.bind(this);\n  }\n\n  nextClickHandler() {\n    console.log(\"success\");\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\").then(d => d.json()).then(quotes => this.setState({\n      quotes\n    }, this.assignIndex)).catch(function (error) {\n      console.log('fetch失败');\n    });\n  }\n\n  get selectedQuote() {\n    if (!this.state.quotes.length && !Number.isInteger(this.state.selectedIndex)) {\n      return;\n    }\n\n    return this.state.quotes[this.state.selectedIndex];\n  } // Pick a index for get quotes\n\n\n  setSelectedIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n\n    return random(0, this.state.quotes.length - 1);\n  }\n\n  assignIndex() {\n    this.setState({\n      selectedIndex: this.setSelectedIndex()\n    });\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      className: this.props.classes.container + ' ' + this.props.classes.Grid,\n      id: \"quote-box\",\n      justify: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      lg: 6,\n      className: this.props.classes.Grid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fixed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(QuoteMachine, {\n      assignIndex: this.assignIndex,\n      selectedQuote: this.selectedQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withStyles(style)(App);","map":{"version":3,"sources":["C:/Users/Sushi/Documents/Dev/JavascritTest/randomquote/src/App.js"],"names":["React","Component","QuoteMachine","random","Grid","withStyles","Box","style","container","type","alignItems","display","height","App","constructor","props","state","quotes","selectedIndex","assignIndex","bind","setSelectedIndex","nextClickHandler","console","log","componentDidMount","fetch","then","d","json","setState","catch","error","selectedQuote","length","Number","isInteger","render","classes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport 'typeface-roboto';\nimport QuoteMachine from './components/QuoteMachine';\nimport { random } from 'lodash';\nimport { Grid ,withStyles} from '@material-ui/core'\nimport Box from '@material-ui/core/Box';\n\nconst style = {\n  container: {\n    type: 'dark',\n    alignItems: 'center',\n    display: 'flex',\n    height: '100vh'\n  },\n  Grid: {\n    height: '140'\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [\n        {\n          \"quote\": \"get faild\",\n          \"author\": \"吴书琪\"\n        }\n      ],\n      selectedIndex: null\n    }\n    this.assignIndex = this.assignIndex.bind(this)\n    this.setSelectedIndex = this.setSelectedIndex.bind(this)\n  }\n\n  nextClickHandler() {\n    console.log(\"success\");\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\")\n\n      .then(d => d.json())\n      .then(quotes => this.setState({ quotes }, this.assignIndex))\n      .catch(function (error) {\n        console.log('fetch失败');\n      })\n  }\n\n\n  get selectedQuote() {\n    if (!this.state.quotes.length && !Number.isInteger(this.state.selectedIndex)) {\n      return;\n    }\n    return this.state.quotes[this.state.selectedIndex];\n  }\n\n  // Pick a index for get quotes\n  setSelectedIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n    return random(0, this.state.quotes.length - 1)\n  }\n\n  assignIndex() {\n    this.setState({ selectedIndex: this.setSelectedIndex() })\n  }\n  render() {\n    return (\n      <Grid className={this.props.classes.container + ' ' + this.props.classes.Grid} id=\"quote-box\" justify=\"center\" container>\n        \n        <Grid item xs={12} lg={6} className={this.props.classes.Grid}>\n        <Container fixed>\n        </Container>\n          <QuoteMachine assignIndex={this.assignIndex} selectedQuote={this.selectedQuote} />\n        </Grid>\n      </Grid>\n    )\n  }\n\n}\n\nexport default withStyles(style)(App);\n"]},"metadata":{},"sourceType":"module"}