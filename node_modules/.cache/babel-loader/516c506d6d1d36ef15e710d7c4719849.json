{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sushi\\\\Documents\\\\Dev\\\\JavascritTest\\\\randomquote\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Button from './components/Button.js';\nimport { random } from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      selectedIndex: null\n    };\n    this.setSelectedIndex = this.setSelectedIndex.bind(this);\n  }\n\n  nextClickHandler() {\n    console.log(\"success\");\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\").then(d => d.json()).then(quotes => this.setState({\n      quotes\n    }, () => {\n      this.setState({\n        selectedIndex: this.setSelectedIndex()\n      });\n    })).catch(function (error) {\n      console.log('fetch失败' + error);\n    });\n    {}\n    /* setState, with a callback */\n    // .then( () => { this.setState({ selectedIndex:  this.setSelectedIndex() })\n  } // Pick a index for get quotes\n\n\n  setSelectedIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n\n    return random(0, this.state.quotes.length - 1);\n  }\n\n  render() {\n    console.log(this.state.quotes);\n    console.log(this.state.selectedIndex);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Quote Machine\"), React.createElement(Button, {\n      buttonDisplayName: \"Quote Get\",\n      onClick: this.nextClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sushi/Documents/Dev/JavascritTest/randomquote/src/App.js"],"names":["React","Component","Button","random","App","constructor","props","state","quotes","selectedIndex","setSelectedIndex","bind","nextClickHandler","console","log","componentDidMount","fetch","then","d","json","setState","catch","error","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAIA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDC,EAAAA,gBAAgB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,uIAAD,CAAL,CAECC,IAFD,CAEMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAFX,EAGCF,IAHD,CAGMT,MAAM,IAAI,KAAKY,QAAL,CAAc;AAAEZ,MAAAA;AAAF,KAAd,EAA0B,MAAK;AAC7C,WAAKY,QAAL,CAAc;AAAEX,QAAAA,aAAa,EAAE,KAAKC,gBAAL;AAAjB,OAAd;AACA,KAFc,CAHhB,EAMEW,KANF,CAMQ,UAASC,KAAT,EAAgB;AACrBT,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYQ,KAAxB;AACD,KARF;AAUA,KAAiC;AAAhC;AACD;AACD,GA3ByB,CA6B1B;;;AACAZ,EAAAA,gBAAgB,GAAG;AACf,QAAK,CAAC,KAAKH,KAAL,CAAWC,MAAX,CAAkBe,MAAxB,EAAiC;AAC/B;AACD;;AACD,WAAOpB,MAAM,CAAC,CAAD,EAAI,KAAKI,KAAL,CAAWC,MAAX,CAAkBe,MAAlB,GAA2B,CAA/B,CAAb;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACPX,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,MAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,aAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,MAAD;AACE,MAAA,iBAAiB,EAAC,WADpB;AAEE,MAAA,OAAO,EACL,KAAKG,gBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAYD;;AApDyB;;AAwD5B,eAAeR,GAAf","sourcesContent":["import React, {Component} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Button from './components/Button.js'\nimport { random } from 'lodash'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      selectedIndex: null\n    }\n    this.setSelectedIndex = this.setSelectedIndex.bind(this)\n  }\n\n  nextClickHandler() {\n    console.log(\"success\");\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\")\n\n    .then(d => d.json())\n    .then(quotes => this.setState({ quotes }, ()=> {\n      this.setState({ selectedIndex: this.setSelectedIndex() })\n     }))\n     .catch(function(error) {\n       console.log('fetch失败' + error);\n     })\n     \n    {/* setState, with a callback */}\n    // .then( () => { this.setState({ selectedIndex:  this.setSelectedIndex() })\n  }\n\n  // Pick a index for get quotes\n  setSelectedIndex() {\n      if ( !this.state.quotes.length ) {\n        return;\n      }\n      return random(0, this.state.quotes.length - 1)\n  }\n\n  render() {\n    console.log(this.state.quotes)\n    console.log(this.state.selectedIndex)\n    return (\n      <div className=\"App\" id=\"quote-box\">\n        <h1>Quote Machine</h1>\n        <Button\n          buttonDisplayName=\"Quote Get\"\n          onClick={\n            this.nextClickHandler\n          }\n        />\n\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}