{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sushi\\\\Documents\\\\Dev\\\\JavascritTest\\\\randomquote\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport QuoteMachine from './components/QuoteMachine';\nimport { random } from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [{\n        \"quote\": \"get faild\",\n        \"author\": \"吴书琪\"\n      }],\n      selectedIndex: null\n    };\n    this.assignIndex = this.assignIndex.bind(this);\n    this.setSelectedIndex = this.setSelectedIndex.bind(this);\n  }\n\n  nextClickHandler() {\n    console.log(\"success\");\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\").then(d => d.json()).then(quotes => this.setState({\n      quotes\n    }, this.assignIndex)).catch(function (error) {\n      console.log('fetch失败');\n    });\n  }\n\n  get selectedQuote() {\n    if (!this.state.quotes.length && !Number.isInteger(this.state.selectedIndex)) {\n      return;\n    }\n\n    return this.state.quotes[this.state.selectedIndex];\n  } // Pick a index for get quotes\n\n\n  setSelectedIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n\n    return random(0, this.state.quotes.length - 1);\n  }\n\n  assignIndex() {\n    this.setState({\n      selectedIndex: this.setSelectedIndex()\n    });\n  }\n\n  render() {\n    console.log(this.state.quotes);\n    console.log(this.state.selectedIndex);\n    console.log(this.selectedQuote);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Quote Machine\"), React.createElement(QuoteMachine, {\n      assignIndex: this.assignIndex,\n      selectedQuote: this.selectedQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sushi/Documents/Dev/JavascritTest/randomquote/src/App.js"],"names":["React","Component","QuoteMachine","random","App","constructor","props","state","quotes","selectedIndex","assignIndex","bind","setSelectedIndex","nextClickHandler","console","log","componentDidMount","fetch","then","d","json","setState","catch","error","selectedQuote","length","Number","isInteger","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAIA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CACN;AACE,iBAAU,WADZ;AAEE,kBAAW;AAFb,OADM,CADG;AAOXC,MAAAA,aAAa,EAAE;AAPJ,KAAb;AASA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDE,EAAAA,gBAAgB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,uIAAD,CAAL,CAEGC,IAFH,CAEQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAFb,EAGGF,IAHH,CAGQV,MAAM,IAAI,KAAKa,QAAL,CAAc;AAAEb,MAAAA;AAAF,KAAd,EAA0B,KAAKE,WAA/B,CAHlB,EAIGY,KAJH,CAIS,UAAUC,KAAV,EAAiB;AACtBT,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KANH;AAOD;;AAGD,MAAIS,aAAJ,GAAoB;AAClB,QAAI,CAAC,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB,MAAnB,IAA6B,CAACC,MAAM,CAACC,SAAP,CAAiB,KAAKpB,KAAL,CAAWE,aAA5B,CAAlC,EAA8E;AAC5E;AACD;;AACD,WAAO,KAAKF,KAAL,CAAWC,MAAX,CAAkB,KAAKD,KAAL,CAAWE,aAA7B,CAAP;AACD,GApCyB,CAsC1B;;;AACAG,EAAAA,gBAAgB,GAAG;AACjB,QAAI,CAAC,KAAKL,KAAL,CAAWC,MAAX,CAAkBiB,MAAvB,EAA+B;AAC7B;AACD;;AACD,WAAOtB,MAAM,CAAC,CAAD,EAAI,KAAKI,KAAL,CAAWC,MAAX,CAAkBiB,MAAlB,GAA2B,CAA/B,CAAb;AACD;;AAEDf,EAAAA,WAAW,GAAG;AACZ,SAAKW,QAAL,CAAc;AAAEZ,MAAAA,aAAa,EAAE,KAAKG,gBAAL;AAAjB,KAAd;AACD;;AACDgB,EAAAA,MAAM,GAAG;AACPd,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,MAAvB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWE,aAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,aAAjB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,YAAD;AAAe,MAAA,WAAW,EAAE,KAAKd,WAAjC;AAA8C,MAAA,aAAa,EAAE,KAAKc,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5DyB;;AAgE5B,eAAepB,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport QuoteMachine from './components/QuoteMachine'\nimport { random } from 'lodash'\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [\n        {\n          \"quote\" : \"get faild\",\n          \"author\" : \"吴书琪\"\n        }\n      ],\n      selectedIndex: null\n    }\n    this.assignIndex = this.assignIndex.bind(this)\n    this.setSelectedIndex = this.setSelectedIndex.bind(this)\n  }\n\n  nextClickHandler() {\n    console.log(\"success\");\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\")\n\n      .then(d => d.json())\n      .then(quotes => this.setState({ quotes }, this.assignIndex) )\n      .catch(function (error) {\n        console.log('fetch失败');\n      })\n  }\n\n \n  get selectedQuote() {\n    if( !this.state.quotes.length && !Number.isInteger(this.state.selectedIndex)) {\n      return;\n    }\n    return this.state.quotes[this.state.selectedIndex];\n  }\n\n  // Pick a index for get quotes\n  setSelectedIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n    return random(0, this.state.quotes.length - 1)\n  }\n\n  assignIndex() {\n    this.setState({ selectedIndex: this.setSelectedIndex() })\n  }\n  render() {\n    console.log(this.state.quotes)\n    console.log(this.state.selectedIndex)\n    console.log(this.selectedQuote)\n\n    return (\n      <div className=\"App\" id=\"quote-box\">\n        <h1>Quote Machine</h1>\n        <QuoteMachine  assignIndex={this.assignIndex} selectedQuote={this.selectedQuote}/>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}