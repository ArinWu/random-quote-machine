{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sushi\\\\Documents\\\\Dev\\\\JavascritTest\\\\randomquote\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Button from './components/Button.js';\nimport { random } from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [{\n        \"quote\": \"get faild\",\n        \"author\": \"吴书琪\"\n      }],\n      selectedIndex: null\n    };\n    this.setSelectedIndex = this.setSelectedIndex.bind(this);\n  }\n\n  nextClickHandler() {\n    console.log(\"success\");\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\").then(d => d.json()).then(quotes => this.setState({\n      quotes\n    }, this.assignIndex)).catch(function (error) {\n      console.log('fetch失败');\n    });\n  }\n\n  assignIndex() {\n    this.setState({\n      selectedIndex: this.setSelectedIndex()\n    });\n  }\n\n  get selectedQuote() {\n    if (!this.state.quotes.length && !Number.isInteger(this.state.selectedIndex)) {\n      return;\n    }\n\n    return this.state.quotes[this.state.selectedIndex];\n  } // Pick a index for get quotes\n\n\n  setSelectedIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n\n    return random(0, this.state.quotes.length - 1);\n  }\n\n  render() {\n    console.log(this.state.quotes);\n    console.log(this.state.selectedIndex);\n    console.log(this.selectedQuote); // console.log(this.selectedQuote.author)\n    // console.log(this.selectedQuote.quote)\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Quote Machine\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.selectedQuote ? this.selectedQuote.quote : this.state.quotes.quote), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.selectedQuote ? this.selectedQuote.author : this.state.quotes.author), React.createElement(Button, {\n      buttonDisplayName: \"Quote Get\",\n      onClick: this.assignIndex(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sushi/Documents/Dev/JavascritTest/randomquote/src/App.js"],"names":["React","Component","Button","random","App","constructor","props","state","quotes","selectedIndex","setSelectedIndex","bind","nextClickHandler","console","log","componentDidMount","fetch","then","d","json","setState","assignIndex","catch","error","selectedQuote","length","Number","isInteger","render","quote","author"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Button from './components/Button.js'\nimport { random } from 'lodash'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [\n        {\n          \"quote\" : \"get faild\",\n          \"author\" : \"吴书琪\"\n        }\n      ],\n      selectedIndex: null\n    }\n    this.setSelectedIndex = this.setSelectedIndex.bind(this)\n  }\n\n  nextClickHandler() {\n    console.log(\"success\");\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\")\n\n      .then(d => d.json())\n      .then(quotes => this.setState({ quotes }, this.assignIndex) )\n      .catch(function (error) {\n        console.log('fetch失败');\n        \n      })\n  }\n\n  assignIndex() {\n    this.setState({ selectedIndex: this.setSelectedIndex() })\n  }\n  get selectedQuote() {\n    if( !this.state.quotes.length && !Number.isInteger(this.state.selectedIndex)) {\n      return;\n    }\n    return this.state.quotes[this.state.selectedIndex];\n  }\n\n  // Pick a index for get quotes\n  setSelectedIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n    return random(0, this.state.quotes.length - 1)\n  }\n\n  render() {\n    console.log(this.state.quotes)\n    console.log(this.state.selectedIndex)\n    console.log(this.selectedQuote)\n    // console.log(this.selectedQuote.author)\n    // console.log(this.selectedQuote.quote)\n    return (\n      <div className=\"App\" id=\"quote-box\">\n        <h1>Quote Machine</h1>\n        <h2>\n          { this.selectedQuote ? this.selectedQuote.quote : this.state.quotes.quote}\n        </h2>\n        <h3>\n        { this.selectedQuote ? this.selectedQuote.author : this.state.quotes.author}\n        </h3>\n        {/* <div> { this.state.quote ? `\"${ this.state.quotes.quote }\" - ${ this.state.quotes.author}` : \"\"} </div> */}\n        <Button\n          buttonDisplayName=\"Quote Get\"\n          onClick={\n            this.assignIndex()\n          }\n        />\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}