{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Sushi\\\\Documents\\\\Dev\\\\\\u9879\\u76EE\\\\randomquote\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Sushi\\\\Documents\\\\Dev\\\\\\u9879\\u76EE\\\\randomquote\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Sushi\\\\Documents\\\\Dev\\\\\\u9879\\u76EE\\\\randomquote\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Sushi\\\\Documents\\\\Dev\\\\\\u9879\\u76EE\\\\randomquote\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\Users\\\\Sushi\\\\Documents\\\\Dev\\\\\\u9879\\u76EE\\\\randomquote\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Sushi\\\\Documents\\\\Dev\\\\\\u9879\\u76EE\\\\randomquote\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import'typeface-roboto';import QuoteMachine from'./components/QuoteMachine';import{random}from'lodash';import{Grid,withStyles}from'@material-ui/core';import{data}from'./components/store';var style={container:{// type: 'dark',\nalignItems:'center',display:'flex',height:'100vh'},Grid:{height:'140'}};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.randomColorGenerator=function(){var baseColor=Math.floor(Math.random()*360);return{light:\"hsl(\"+baseColor+\",30%,70%)\",dark:\"hsl(\"+baseColor+\",30%,30%)\"};};_this.state={//if failed show 默认数据\nquotes:[{\"quote\":\"get faild\",\"author\":\"吴书琪\"}],//通过index来选择数据\nselectedIndex:null,color:null};_this.assignIndex=_this.assignIndex.bind(_assertThisInitialized(_this));_this.setSelectedIndex=_this.setSelectedIndex.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"nextClickHandler\",value:function nextClickHandler(){console.log(\"success\");}//可以使用localstoreage其实\n},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;localStorage.setItem('example_project','Randowm Quote Machine');fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\").then(function(d){return d.json();}).then(function(quotes){return _this2.setState({quotes:quotes},_this2.assignIndex);}).catch(function(error){var _this3=this;fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json').then(function(d){return d.json();}).then(function(quotes){return _this3.setState({quotes:quotes},_this3.assignIndex);}).then(function(error){this.setState(data,this.assignIndex);});});}//返回如果有返回这条数据，并更新state\n//每一次会返回不同的数值\n//get是有数据才返回\n},{key:\"setSelectedIndex\",// Pick a index for get quotes\n//产生index\nvalue:function setSelectedIndex(){if(!this.state.quotes.length){return;}return random(0,this.state.quotes.length-1);}//更新index\n},{key:\"assignIndex\",value:function assignIndex(){// let newIndex = this.randomIndexGenerator();\nvar newColor=this.randomColorGenerator();this.setState({selectedIndex:this.setSelectedIndex(),color:newColor});}},{key:\"render\",value:function render(){// let newColor = this.randomColorGenerator(); \nreturn React.createElement(\"div\",null,React.createElement(Grid,{className:this.props.classes.container+' '+this.props.classes.Grid,id:\"quote-box\",justify:\"center\",container:true},React.createElement(Grid,{item:true,xs:12,lg:6,className:this.props.classes.Grid,fixed:true},React.createElement(QuoteMachine,{assignIndex:this.assignIndex,selectedQuote:this.selectedQuote}))));}},{key:\"selectedQuote\",get:function get(){if(!this.state.quotes.length&&!Number.isInteger(this.state.selectedIndex)){return;}return this.state.quotes[this.state.selectedIndex];}}]);return App;}(Component);export default withStyles(style)(App);","map":{"version":3,"sources":["C:/Users/Sushi/Documents/Dev/项目/randomquote/src/App.js"],"names":["React","Component","QuoteMachine","random","Grid","withStyles","data","style","container","alignItems","display","height","App","props","randomColorGenerator","baseColor","Math","floor","light","dark","state","quotes","selectedIndex","color","assignIndex","bind","setSelectedIndex","console","log","localStorage","setItem","fetch","then","d","json","setState","catch","error","length","newColor","classes","selectedQuote","Number","isInteger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'typeface-roboto';\nimport QuoteMachine from './components/QuoteMachine';\nimport { random } from 'lodash';\nimport { Grid, withStyles } from '@material-ui/core'\nimport { data } from './components/store'\n\nconst style = {\n  container: {\n    // type: 'dark',\n    alignItems: 'center',\n    display: 'flex',\n    height: '100vh'\n  },\n  Grid: {\n    height: '140'\n  }\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //if failed show 默认数据\n      quotes: [\n        {\n          \"quote\": \"get faild\",\n          \"author\": \"吴书琪\",\n        },\n\n      ],\n      //通过index来选择数据\n      selectedIndex: null,\n      color: null\n    }\n    this.assignIndex = this.assignIndex.bind(this)\n    this.setSelectedIndex = this.setSelectedIndex.bind(this)\n  }\n\n  nextClickHandler() {\n    console.log(\"success\");\n  }\n\n  //可以使用localstoreage其实\n  componentDidMount() {\n    localStorage.setItem('example_project', 'Randowm Quote Machine');\n\n    fetch(\"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\")\n\n      .then(d => d.json())\n      .then(quotes => this.setState({ quotes }, this.assignIndex))\n      .catch(function (error) {\n        fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n          .then(d => d.json())\n          .then(quotes => this.setState({ quotes }, this.assignIndex))\n          .then(function (error) {\n            this.setState(data, this.assignIndex)\n          })\n      })\n  }\n\n  //返回如果有返回这条数据，并更新state\n  //每一次会返回不同的数值\n  //get是有数据才返回\n  get selectedQuote() {\n    if (!this.state.quotes.length && !Number.isInteger(this.state.selectedIndex)) {\n      return;\n    }\n    return this.state.quotes[this.state.selectedIndex];\n  }\n\n  // Pick a index for get quotes\n  //产生index\n  setSelectedIndex() {\n    if (!this.state.quotes.length) {\n      return;\n    }\n    return random(0, this.state.quotes.length - 1)\n  }\n  //更新index\n  assignIndex() {\n    // let newIndex = this.randomIndexGenerator();\n    let newColor = this.randomColorGenerator();\n    this.setState({\n      selectedIndex: this.setSelectedIndex(),\n      color: newColor\n    })\n  }\n\n  randomColorGenerator = () => {\n    let baseColor = Math.floor(Math.random() * 360);\n    return { light: \"hsl(\" + baseColor + \",30%,70%)\", dark: \"hsl(\" + baseColor + \",30%,30%)\" };\n  }\n\n  render() {\n    // let newColor = this.randomColorGenerator(); \n    return (\n      <div>\n        <Grid className={this.props.classes.container + ' ' + this.props.classes.Grid} id=\"quote-box\" justify=\"center\" container>\n\n          <Grid item xs={12} lg={6} className={this.props.classes.Grid} fixed>\n\n            <QuoteMachine assignIndex={this.assignIndex} selectedQuote={this.selectedQuote} />\n\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n\n}\n\nexport default withStyles(style)(App);\n"]},"metadata":{},"sourceType":"module"}